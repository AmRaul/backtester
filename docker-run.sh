#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Crypto Backtester –≤ Docker

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ–≤
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p data reports logs

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${BLUE}Crypto Backtester - Docker Runner${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê] [–û–ü–¶–ò–ò]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  web           –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  cli           –ó–∞–ø—É—Å—Ç–∏—Ç—å CLI –≤–µ—Ä—Å–∏—é"
    echo "  build         –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã"
    echo "  stop          –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  logs          –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  clean         –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã"
    echo "  help          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  --minimal     –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–±–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤)"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 web                    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ http://localhost:8000"
    echo "  $0 web --minimal          # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
    echo "  $0 cli --help             # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å CLI"
    echo "  $0 cli --list-exchanges   # –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–∏—Ä–∂–∏"
    echo "  $0 build --minimal        # –°–æ–±—Ä–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑—ã"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
start_web() {
    local use_minimal=false
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ --minimal
    for arg in "$@"; do
        if [ "$arg" = "--minimal" ]; then
            use_minimal=true
            break
        fi
    done
    
    if [ "$use_minimal" = true ]; then
        log "–ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)..."
        compose_file="docker-compose.minimal.yml"
        container_name="backtester_web_minimal"
    else
        log "–ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."
        compose_file="docker-compose.yml"
        container_name="backtester_web"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ
    if docker-compose -f "$compose_file" ps | grep -q "${container_name}.*Up"; then
        warn "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω!"
        log "–î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000"
        return 0
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–∏—Å—ã
    if [ "$use_minimal" = true ]; then
        docker-compose -f "$compose_file" up -d backtester-web
    else
        docker-compose -f "$compose_file" up -d backtester-web redis
    fi
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    log "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 5
    
    if docker-compose -f "$compose_file" ps | grep -q "${container_name}.*Up"; then
        log "‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        log "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000"
        log ""
        log "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: $0 stop"
        log "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: $0 logs"
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
        docker-compose -f "$compose_file" logs backtester-web
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ CLI
start_cli() {
    shift # –£–±–∏—Ä–∞–µ–º 'cli' –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    
    log "–ó–∞–ø—É—Å–∫ CLI –≤–µ—Ä—Å–∏–∏..."
    
    if [ $# -eq 0 ]; then
        # –ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º help
        docker-compose run --rm backtester python main.py --help
    else
        # –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        docker-compose run --rm backtester python main.py "$@"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–æ–≤
build_images() {
    local use_minimal=false
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ --minimal
    for arg in "$@"; do
        if [ "$arg" = "--minimal" ]; then
            use_minimal=true
            break
        fi
    done
    
    if [ "$use_minimal" = true ]; then
        log "–°–±–æ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö Docker –æ–±—Ä–∞–∑–æ–≤..."
        docker-compose -f docker-compose.minimal.yml build --no-cache
    else
        log "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
        docker-compose build --no-cache
    fi
    
    log "‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop_services() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose down
    log "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    if [ $# -gt 1 ]; then
        # –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
        docker-compose logs -f "$2"
    else
        # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ª–æ–≥–∏
        docker-compose logs -f
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
clean_all() {
    warn "–≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞!"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker-compose down -v --remove-orphans
        
        log "–£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤..."
        docker-compose down --rmi all
        
        log "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤..."
        docker system prune -f
        
        log "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    else
        log "–û—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-web}" in
    "web")
        start_web "$@"
        ;;
    "cli")
        start_cli "$@"
        ;;
    "build")
        build_images "$@"
        ;;
    "stop")
        stop_services
        ;;
    "logs")
        show_logs "$@"
        ;;
    "clean")
        clean_all
        ;;
    "help"|"-h"|"--help")
        show_help
        ;;
    *)
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        show_help
        exit 1
        ;;
esac 